{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/details/details.component.ts","./src/app/components/details/details.component.html","./src/app/components/employee/employee.component.ts","./src/app/components/employee/employee.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/helpers/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/employee.service.ts","./src/app/services/tk-storage.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACa;AACG;AACG;AACT;AACG;;;AAEpE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mFAAe,EAAE;IAChD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;CACpD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KAIrB;;wEALY,YAAY;4FAAZ,YAAY;QCNzB,yEACI;QAAA,2EAA+B;QACnC,4DAAM;;6FDIO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACqB;AACG;AACG;AACT;AACG;AACS;AACX;AACV;AACc;AACM;;AAsBrE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,0FAAwB,CAAC,YAP5B;YACP,uEAAa;YACb,oEAAgB;YAChB,2DAAW;YACX,mEAAmB;YACnB,sEAAgB;SACjB;mIAIU,SAAS,mBAnBlB,2DAAY;QACZ,gFAAc;QACd,mFAAe;QACf,sFAAgB;QAChB,6EAAa;QACb,gFAAc;QACd,yFAAiB;QACjB,oFAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,2DAAW;QACX,mEAAmB;QACnB,sEAAgB;6FAKP,SAAS;cArBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,gFAAc;oBACd,mFAAe;oBACf,sFAAgB;oBAChB,6EAAa;oBACb,gFAAc;oBACd,yFAAiB;oBACjB,oFAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,2DAAW;oBACX,mEAAmB;oBACnB,sEAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,0FAAwB,CAAC;gBACrC,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACnCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICoBjC,qEAAyE;;;IACzE,uEAAwB;IAAA,iEAAM;IAAA,4DAAO;;;;IAT9C,qEACI;IAAA,qEAAI;IAAA,uDAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,uDAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,wEAEI;IAAA,4EAEC;IAFQ,oVAAwB;IAEhC,kHAAkE;IAClE,oHAAwB;IACzB,4DAAS;IACb,4DAAK;IACT,4DAAK;;;IAXG,0DAAU;IAAV,0EAAU;IACV,0DAAU;IAAV,0EAAU;IACV,0DAAW;IAAX,2EAAW;IAIoC,0DAAuB;IAAvB,mFAAuB;IAC/D,0DAAkB;IAAlB,+EAAkB;IAClB,0DAAiB;IAAjB,8EAAiB;;ADbjC,MAAM,cAAc;IAEzB,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAE3D,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC5C,IAAI,GAAE;YACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,IAAY;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QAE3D,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAC1C,IAAI,GAAE;YACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QAC/D,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;;4EA9BU,cAAc;8FAAd,cAAc;QCR3B,wEAAyB;QACzB,gEAAI;QAAA,gEACJ;QAAA,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,wEAAgB;QAAA,+DAAI;QAAA,4DAAK;QACzB,wEAAgB;QAAA,+DAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC1B,yEAAgB;QAAA,mEAAO;QAAA,4DAAK;QAChC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,2GACI;QAYR,4DAAQ;QACZ,4DAAQ;;QAdI,2DAA2B;QAA3B,kFAA2B;;6FDJ1B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG8B;;;;;;;;;ICehE,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IADhE,0EACI;IAAA,oHAAqC;IACzC,4DAAM;;;IADG,0DAA+B;IAA/B,gGAA+B;;;IASpC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,oHAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,+FAA8B;;;IAQnC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,oHAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,+FAA8B;;;IAUnC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADlE,0EACI;IAAA,oHAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,iGAAgC;;;IAQrC,sEAA0C;IAAA,iFAAsB;IAAA,4DAAM;;;IAD1E,0EACI;IAAA,oHAA0C;IAC9C,4DAAM;;;IADG,0DAAoC;IAApC,qGAAoC;;;IAO7C,sEAA2E;;;ADjDhF,MAAM,gBAAgB;IAK3B,YACY,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,eAAgC,EAChC,YAA8B;QAJ9B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAkB;QAR1C,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAQf,CAAC;IAEJ,QAAQ;QACJ,qCAAqC;QACrC,uDAAuD;QAEvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5E,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxE,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC9E,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvD,CAAC,EAAC,GAAG,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAIT,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEtC,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACnB,OAAO;SACV;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,QAAQ,GAAa;YACzB,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;YACnB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;YACvB,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK;YAC/B,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;YACzB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;YACvB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;YACvB,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK;YACnC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;YAC3B,QAAQ,EAAC,EAAE;SACZ;QACD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CACrE,IAAI,GAAE;YACJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;;gFA3EU,gBAAgB;gGAAhB,gBAAgB;QCX7B,wEAAyB;QACzB,0EACI;QADqB,4IAAY,cAAU,IAAC;QAC5C,yEACI;QAAA,yEACI;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,sEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EAAkB;QAAA,iEAAK;QAAA,4DAAQ;QAC/B,uEAEA;QAAA,+GACI;QAER,4DAAM;QAEN,0EACI;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,wEAEA;QAAA,+GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,wEAEA;QAAA,+GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAEA;QAAA,+GACI;QAER,4DAAM;QACN,0EACI;QAAA,6EAAwB;QAAA,sEAAU;QAAA,4DAAQ;QAC1C,wEAEA;QAAA,+GACI;QAER,4DAAM;QAEV,4DAAM;QACN,2EACI;QAAA,8EACI;QAAA,iHAAoE;QACpE,kEACJ;QAAA,4DAAS;QACT,yEAA2C;QAAA,kEAAM;QAAA,4DAAI;QACzD,4DAAM;QACV,4DAAO;;QAhED,0DAAkB;QAAlB,+EAAkB;QAeR,2DAAyD;QAAzD,gLAAyD;QACxD,0DAAmC;QAAnC,qGAAmC;QAQpC,0DAAwD;QAAxD,+KAAwD;QACvD,0DAAkC;QAAlC,oGAAkC;QAOnC,0DAAwD;QAAxD,+KAAwD;QACvD,0DAAkC;QAAlC,oGAAkC;QASnC,0DAA0D;QAA1D,iLAA0D;QACzD,0DAAoC;QAApC,sGAAoC;QAOrC,0DAA8D;QAA9D,qLAA8D;QAC7D,0DAAwC;QAAxC,0GAAwC;QAOzC,0DAAoB;QAApB,iFAAoB;QAClB,0DAAe;QAAf,6EAAe;;6FDjDpB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;6FDOT,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICChD,wEACE;IAAA,uEAA8C;IAAA,+DAAI;IAAA,4DAAI;IACxD,4DAAK;;;IACL,wEACE;IAAA,uEAA0C;IAAA,kEAAO;IAAA,4DAAI;IACvD,4DAAK;;;IACL,wEACE;IAAA,uEAA6B;IAAA,gEAAK;IAAA,4DAAI;IACxC,4DAAK;;;IACL,wEACE;IAAA,uEAA4C;IAAA,kEAAO;IAAA,4DAAI;IACzD,4DAAK;;;IACL,wEACE;IAAA,uEAAyC;IAAA,gEAAK;IAAA,4DAAI;IACpD,4DAAK;;;;IACL,wEACE;IAAA,uEAAwC;IAApB,0SAAkB;IAAE,kEAAO;IAAA,4DAAI;IACrD,4DAAK;;ADTA,MAAM,eAAe;IAM1B,YAAoB,mBAAqC,EAAU,MAAc;QAA7D,wBAAmB,GAAnB,mBAAmB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJjF,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAE,KAAK,CAAC;QAEpB,eAAU,GAAG,KAAK,CAAC;IAGnB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QAEpD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAExB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAGzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;;8EA3BM,eAAe;+FAAf,eAAe;QCT5B,wEACE;QAAA,yGACE;QAEF,yGACE;QAEF,yGACE;QAEF,yGACE;QAEF,yGACE;QAEF,yGACE;QAEJ,4DAAK;;QAlBC,0DAAoB;QAApB,kFAAoB;QAGnB,0DAAoB;QAApB,kFAAoB;QAGrB,0DAAiB;QAAjB,+EAAiB;QAGhB,0DAAmB;QAAnB,iFAAmB;QAGpB,0DAAmB;QAAnB,iFAAmB;QAGnB,0DAAkB;QAAlB,gFAAkB;;6FDPX,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,wEAAyB;QACzB,oEAAG;QAAA,kEAAO;QAAA,4DAAI;;6FDMD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICiBtB,0EACI;IAAA,iFACJ;IAAA,4DAAM;;;IASN,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACI;IAAA,mGACJ;IAAA,4DAAM;;;IAJV,0EACI;IAAA,0HAAsC;IACtC,0HACI;IAER,4DAAM;;;;IAJG,0DAAgC;IAAhC,qFAAgC;IAChC,0DAAiC;IAAjC,sFAAiC;;;IAStC,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,6GACJ;;;;;IA7BR,8EAEI;IAFmC,sZAAuC;IAE1E,0EACI;IAAA,4EAAsB;IAAA,mEAAQ;IAAA,4DAAQ;IACtC,gFAEA;IADiC,uVAA2B;IAD5D,4DAEA;IAAA,mHACI;IAER,4DAAM;IACN,0EACI;IAAA,4EAAsB;IAAA,oEAAQ;IAAA,4DAAQ;IACtC,iFAGJ;IAFQ,wVAA2B;IAD/B,4DAGJ;IAAA,4DAAM;IACN,qHACI;IAMJ,0EACI;IAAA,8EAAsE;IAAA,iEAAK;IAAA,4DAAS;IACxF,4DAAM;IACN,2EACI;IAAA,qHACI;IAER,4DAAM;IAEN,2EACI;IAAA,yEAAuB;IAAA,qFAAyB;IAAA,yEAC5B;IAAA,mEAAO;IAAA,4DAAI;IAAA,4DAAI;IACvC,4DAAM;IACV,4DAAO;;;;;;IA/BkC,0DAA2B;IAA3B,yFAA2B;IACf,0DAAuC;IAAvC,8FAAuC;IAOhF,0DAA2B;IAA3B,yFAA2B;IAGU,0DAAuC;IAAvC,8FAAuC;IAWnC,0DAAoC;IAApC,uGAAoC;IAM9B,0DAA4B;IAA5B,6IAA4B;;;IAIvF,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,sGACJ;;ADtCb,MAAM,cAAc;IAQzB,YAAoB,WAAwB,EAAU,YAA8B,EAAS,MAAc;QAAvF,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAN3G,SAAI,GAAQ,EAAE,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAE,KAAK,CAAC;QACrB,iBAAY,GAAE,EAAE,CAAC;QACjB,UAAK,GAAY,EAAE,CAAC;IAE2F,CAAC;IAEhH,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,IAAI,GAAE;YACJ,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;YAC/C,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACjC,CAAC;;4EAhCU,cAAc;8FAAd,cAAc;QCZ3B,wEAAyB;QACzB,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAClB,4DAAM;QACV,4DAAM;QACN,+GAEI;QAmCJ,4GACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA5CoB,2DAAmB;QAAnB,iFAAmB;QAqCQ,0DAAkB;QAAlB,gFAAkB;;6FDpC1D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE+B;;;;;;;;ICOrE,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,0EACE;IAAA,kHAAwC;IAC1C,4DAAM;;;IADC,0DAAkC;IAAlC,mGAAkC;;;IAOvC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD5D,0EACE;IAAA,mHAAoC;IACtC,4DAAM;;;IADC,0DAA8B;IAA9B,+FAA8B;;;IAUnC,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAD9D,0EACE;IAAA,mHAAqC;IACvC,4DAAM;;;IADC,0DAA+B;IAA/B,gGAA+B;;;IAQpC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,0EACE;IAAA,mHAAwC;IAC1C,4DAAM;;;IADC,0DAAkC;IAAlC,mGAAkC;;;IAUvC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD5D,0EACE;IAAA,mHAAoC;IACtC,4DAAM;;;IADC,0DAA8B;IAA9B,+FAA8B;;;IAQnC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD5D,0EACE;IAAA,mHAAoC;IACtC,4DAAM;;;IADC,0DAA8B;IAA9B,+FAA8B;;;IAUnC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADhE,0EACE;IAAA,mHAAsC;IACxC,4DAAM;;;IADC,0DAAgC;IAAhC,iGAAgC;;;IAQrC,sEAA0C;IAAA,iFAAsB;IAAA,4DAAM;;;IADxE,0EACE;IAAA,mHAA0C;IAC5C,4DAAM;;;IADC,0DAAoC;IAApC,qGAAoC;;;IAMzC,sEAA2E;;;IAK/E,0EACE;IAAA,0EAAc;IAAA,gEAAM;IAAA,uDACtB;IAAA,4DAAM;;;IADgB,0DACtB;IADsB,8FACtB;;;IAGJ,0EACE;IAAA,6FACF;IAAA,4DAAM;;;AD7EH,MAAM,eAAe;IAS1B,YAAoB,WAAwB,EAClC,WAAwB,EACxB,KAAqB,EACrB,MAAc;QAHJ,gBAAW,GAAX,WAAW,CAAa;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QATxB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAE,EAAE,CAAC;IAMX,CAAC;IAEP,QAAQ;QAEN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAG,yDAAU,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;IACH,CAAC;IACD,QAAQ;QACN,MAAM,QAAQ,GAAa;YACzB,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;YACnB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;YACvB,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK;YAC/B,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;YACzB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;YACvB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;YACvB,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK;YACnC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;YAC3B,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK;SAChC;QAED,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzC,IAAI,GAAE;YACJ,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;YACvB,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;QAC5B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IACC,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;8EAtD7B,eAAe;+FAAf,eAAe;QCX5B,wEAAyB;QACzB,yEACE;QAAA,yEACE;QAAA,0EACE;QADuB,2IAAY,cAAU,IAAC;QAC9C,yEACE;QAAA,yEACE;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,sEACA;QAAA,2GACE;QAEJ,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,uEACA;QAAA,6GACE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,2EACE;QAAA,6EAAkB;QAAA,iEAAK;QAAA,4DAAQ;QAC/B,wEAEA;QAAA,6GACE;QAEJ,4DAAM;QAEN,0EACE;QAAA,wEAA8B;QAC9B,wEACA;QAAA,6GACE;QAGJ,4DAAM;QAEN,0EACE;QAAA,6EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,wEAEA;QAAA,6GACE;QAEJ,4DAAM;QACN,0EACE;QAAA,6EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,wEAEA;QAAA,6GACE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,wEAEA;QAAA,6GACE;QAEJ,4DAAM;QACN,0EACE;QAAA,6EAAwB;QAAA,sEAAU;QAAA,4DAAQ;QAC1C,wEAEA;QAAA,6GACE;QAEJ,4DAAM;QACR,4DAAM;QACJ,2EACE;QAAA,8EACE;QAAA,gHAAoE;QACpE,kEACF;QAAA,4DAAS;QACX,4DAAM;QAEN,8GACE;QAEN,4DAAO;QAEP,8GACE;QAEJ,4DAAM;QACR,4DAAM;;QAvFI,0DAAkB;QAAlB,+EAAkB;QAIiD,0DAA4D;QAA5D,mLAA4D;QAC1H,0DAAsC;QAAtC,wGAAsC;QAMoB,0DAAwD;QAAxD,+KAAwD;QAClH,0DAAkC;QAAlC,oGAAkC;QASrC,0DAAyD;QAAzD,gLAAyD;QACtD,0DAAmC;QAAnC,qGAAmC;QAO+B,0DAA2D;QAA3D,mLAA2D;QAC7H,0DAAsC;QAAtC,wGAAsC;QASzC,0DAAwD;QAAxD,+KAAwD;QACrD,0DAAkC;QAAlC,oGAAkC;QAOrC,0DAAwD;QAAxD,+KAAwD;QACrD,0DAAkC;QAAlC,oGAAkC;QASrC,0DAA0D;QAA1D,iLAA0D;QACvD,0DAAoC;QAApC,sGAAoC;QAOvC,0DAA8D;QAA9D,qLAA8D;QAC3D,0DAAwC;QAAxC,0GAAwC;QAMrC,0DAAoB;QAApB,iFAAoB;QACpB,0DAAe;QAAf,6EAAe;QAKQ,0DAAqC;QAArC,uGAAqC;QAKzC,0DAAoB;QAApB,kFAAoB;;6FD3E5C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAQb;;;;AAM9B,MAAM,gBAAgB,GAAG,gBAAgB,CAAC;AAGnC,MAAM,eAAe;IAE1B,YAAoB,KAAuB,EAAU,MAAc;QAA/C,UAAK,GAAL,KAAK,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAExE,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,IAAI,OAAO,GAAG,OAAO,CAAC;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;SAChG;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;8EAbU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;AAgBJ,MAAM,wBAAwB,GAAG,CAAC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;;;;;;;;;;;;;AChCjH;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAK/D,MAAM,QAAQ,GAAC,iCAAiC,CAAC;AAEjD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC;CAChE;AAKM,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,KAAK,CAAC,WAAW;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,QAAQ,EAAE;YACvC,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ;SAC/B,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,QAAQ,EACrC,QAAQ,EAAE,WAAW,CAAC,CAAC;IAC3B,CAAC;;sEAdU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAK/D,MAAM,OAAO,GAAE,mCAAmC,CAAC;AACnD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC;CAChE;AAKM,MAAM,eAAe;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACnC,CAAC;IAED,WAAW,CAAC,QAAQ;QAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAC,oBAAoB,GAAE,kBAAkB,CAAE,QAAQ,CAAC,EAAC,WAAW,CAAC,CAAC;IAC/F,CAAC;IAED,cAAc,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAC,UAAU,EACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAChB,WAAW,CAAC,CAAC;IACf,CAAC;IACD,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAC,WAAW,EACxC,WAAW,CAAC,CAAC;IACf,CAAC;IAED,MAAM,CAAC,IAAI;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,SAAS,EACvC,IAAI,EACF,WAAW,CAAC,CAAC;IACjB,CAAC;;8EAxBS,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAA2C;;AAE3C,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,OAAO;QACL,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IACM,SAAS,CAAC,KAAa;QAC5B,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAElD,CAAC;IACM,QAAQ;QACb,OAAO,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IACM,QAAQ,CAAC,IAAI;QAClB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC;IACM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,CAAC;;gFArBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AdminComponent } from './components/admin/admin.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: SignupComponent }, \n  { path: 'details', component: DetailsComponent },  \n  { path: 'home', component: HomeComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: '', redirectTo: 'login', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TkStorageService } from './services/tk-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app-front';\n  \n\n  \n}\n","\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './components/header/header.component'\nimport { authInterceptorProviders } from 'src/app/helpers/auth.interceptor';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    DetailsComponent,\n    HomeComponent,\n    AdminComponent,\n    EmployeeComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/services/employee.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  employees: any;\n  constructor(private employeesService:  EmployeeService) { }\n\n  ngOnInit(): void {\n    this.getAllEmployees();\n  }\n\n  getAllEmployees(){\n    this.employeesService.allEmployees().subscribe(\n      data=>{\n        console.log(data.employees);\n        this.employees = data.employees;\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  delete(code: string): void {\n    const employee = this.employees.find(x => x.code === code);\n\n    this.employeesService.delete(code).subscribe(\n      data=> {\n        this.employees = this.employees.filter(x => x.code !== code);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n}\n","<app-header></app-header>\n<br><br>\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Code</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Roles</th>\n            <th scope=\"col\">Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let e of employees\">\n            <td>{{e.code}}</td>\n            <td>{{e.name}}</td>\n            <td>{{e.roles}}</td>\n            <td style=\"white-space: nowrap\">\n                \n                <button  (click)=\"delete(e.code)\"\n                 class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"!e.enabled\">\n                 <span *ngIf=\"!e.enabled\" class=\"spinner-border spinner-border-sm\"></span>\n                 <span *ngIf=\"e.enabled\">Delete</span>\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { TkStorageService } from 'src/app/services/tk-storage.service';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { FormGroup, FormBuilder, Validators, FormControl} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Employee } from 'src/app/models/employee';\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  form: FormGroup;\n  loading = false;\n  submitted = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private employeeService: EmployeeService,\n      private tokenStorage: TkStorageService\n  ) {}\n\n  ngOnInit() {\n      // password not required in edit mode\n      //const passwordValidators = [Validators.minLength(6)];\n\n      this.form = this.formBuilder.group({\n          id: new FormControl({value: '', disabled: true}, Validators.required),\n          username: new FormControl({ value:'', disabled: true }, Validators.required),\n          email: new FormControl('', Validators.required),\n          name: new FormControl('', Validators.required),\n          code: new FormControl({ value:'', disabled: true }, Validators.required),\n          city: new FormControl('', Validators.required),\n          branch: new FormControl('', Validators.required),\n          profession: new FormControl('', Validators.required)\n      });\n      this.employeeService.getEmployee(this.tokenStorage.getUser().username).subscribe(\n        data => {\n          this.f.id.setValue(data.employee.id);\n          this.f.username.setValue(data.employee.username);\n          this.f.email.setValue(data.employee.email);\n          this.f.code.setValue(data.employee.code);\n          this.f.name.setValue(data.employee.name);\n          this.f.city.setValue(data.employee.city);\n          this.f.branch.setValue(data.employee.branch);\n          this.f.profession.setValue(data.employee.profession);\n        },err =>{\n          console.log(err);\n        });\n                  \n  \n\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.form.controls; }\n\n  onSubmit() {\n    console.log(this.f.name.touched);\n      this.submitted = true;\n      // stop here if form is invalid\n      if (this.form.invalid) {\n          return;\n      }\n      this.loading = true;\n      const employee: Employee = {\n        id: this.f.id.value,\n        name: this.f.name.value,\n        username: this.f.username.value,\n        email: this.f.email.value,\n        code: this.f.code.value,\n        city: this.f.city.value,\n        profession: this.f.profession.value,\n        branch: this.f.branch.value,\n        password:''\n      }\n      this.employeeService.updateEmployee(JSON.stringify(employee)).subscribe(\n        data=> {\n          this.loading = false;\n        },\n        err =>{\n          console.log(err);\n        }\n      );\n  }\n}","<app-header></app-header>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\"  />\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"code\">Code</label>\n            <input type=\"text\" formControlName=\"code\" class=\"form-control\"  />\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"from-group col\">\n            <label for=\"name\">Email</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n            </div>\n        </div>\n\n        <div class=\"form-group col\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"city\">City</label>\n            <input type=\"text\" formControlName=\"city\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" />\n            <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.city.errors.required\">City is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"branch\">Branch</label>\n            <input type=\"text\" formControlName=\"branch\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.branch.errors }\" />\n            <div *ngIf=\"submitted && f.branch.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.branch.errors.required\">Branch is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"profession\">Profession</label>\n            <input type=\"text\" formControlName=\"profession\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.profession.errors }\" />\n            <div *ngIf=\"submitted && f.profession.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.profession.errors.required\">Profession is required</div>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/home\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>employee works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { TkStorageService } from 'src/app/services/tk-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  private roles: string [];\n  showAdmin = false;\n  showEmployee= false;\n  username: string;\n  isLoggedIn = false;\n  constructor(private tokenStorageService: TkStorageService, private router: Router){\n\n  }\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    \n        if (this.isLoggedIn) {\n          const user = this.tokenStorageService.getUser();\n          this.roles = user.roles;\n    \n          this.showAdmin = this.roles.includes('ROLE_ADMIN');\n          this.showEmployee = this.roles.includes('ROLE_EMPLOYEE');\n\n    \n          this.username = user.username;\n        }\n      }\n    \n      logout(): void {\n        this.tokenStorageService.signOut();\n        this.router.navigate(['login']);\n      }\n\n}\n","<ul class=\"nav nav-pills\">\n  <li *ngIf=\"showEmployee\" class=\"nav-item\">\n    <a class=\"nav-link active\" routerLink=\"/home\">Home</a>\n  </li>\n  <li  *ngIf=\"showEmployee\" class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"/details\">Profile</a>\n  </li>\n  <li *ngIf=\"showAdmin\" class=\"nav-item\">\n    <a class=\"nav-link\" href=\"#\">Admin</a>\n  </li>\n  <li  *ngIf=\"!isLoggedIn\" class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"/register\" >Sign Up</a>\n  </li>\n  <li *ngIf=\"!isLoggedIn\" class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"/login\" >Login</a>\n  </li>\n  <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n    <a class=\"nav-link\" (click)=\"logout()\" >Log Out</a>\n  </li>\n</ul>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<p>Welcome</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TkStorageService } from 'src/app/services/tk-storage.service'\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed= false;\n  errorMessage= '';\n  roles: string[]= [];\n  \n  constructor(private authService: AuthService, private tokenStorage: TkStorageService, public router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    this.authService.login(this.form).subscribe(\n      data=> { \n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoginFailed = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.redirect();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n  redirect(): void {\n    this.router.navigate(['home']);\n  }\n\n}\n","<app-header></app-header>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-5 mx-auto\">\n            <div id=\"first\">\n                <div class=\"myform form \">\n                    <div class=\"logo mb-3\">\n                        <div class=\"col-md-12 text-center\">\n                            <h1>Login</h1>\n                        </div>\n                    </div>\n                    <form *ngIf=\"!isLoggedIn\" name=\"login\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\"\n                        novalidate>\n                        <div class=\"form-group\">\n                            <label for=\"username\">Username</label>\n                            <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\"\n                                placeholder=\"Enter username\" [(ngModel)]=\"form.username\" required #username=\"ngModel\">\n                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">\n                                Username is required\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\">Password</label>\n                            <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\"\n                                [(ngModel)]=\"form.password\" required minlength=\"6\" #password=\"ngModel\"\n                                placeholder=\"Enter Password\">\n                        </div>\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\">\n                            <div *ngIf=\"password.errors.required\">Password is required</div>\n                            <div *ngIf=\"password.errors.minlength\">\n                                Password must be at least 6 characters\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-12 text-center \">\n                            <button type=\"submit\" class=\" btn btn-block mybtn btn-primary tx-tfm\">Login</button>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\n                                Login failed: {{ errorMessage }}\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <p class=\"text-center\">Do not you have account? <a [routerLink]=\"['/register']\"\n                                    id=\"signup\">Sign Up</a></p>\n                        </div>\n                    </form>\n                    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n                        Logged in as {{ roles }}.\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service'\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Employee } from 'src/app/models/employee';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  form: FormGroup;\n  loading = false;\n  submitted = false;\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage= '';\n\n  constructor(private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n    ) { }\n\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n      id: new FormControl('', Validators.required),\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      code: new FormControl('' , Validators.required),\n      city: new FormControl('', Validators.required),\n      branch: new FormControl('', Validators.required),\n      profession: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n  });\n  }\n  onSubmit(): void {\n    const employee: Employee = {\n      id: this.f.id.value,\n      name: this.f.name.value,\n      username: this.f.username.value,\n      email: this.f.email.value,\n      code: this.f.code.value,\n      city: this.f.city.value,\n      profession: this.f.profession.value,\n      branch: this.f.branch.value,\n      password: this.f.password.value\n    }\n    \n    this.authService.signup(employee).subscribe(\n      data=> {\n        this.isSuccessful=true;\n        this.isSignUpFailed=false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed= true;\n      }\n    );\n  }\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n}\n","<app-header></app-header>\n<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label for=\"username\">Username</label>\n          <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\n          </div>\n        </div>\n        <div class=\"form-group col\">\n          <label for=\"code\">Code</label>\n          <input type=\"text\" formControlName=\"code\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\" />\n          <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.code.errors.required\">Code is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"from-group col\">\n          <label for=\"name\">Email</label>\n          <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n          </div>\n        </div>\n\n        <div class=\"form-group col\">\n          <label for=\"password\"></label>\n          <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\" {'is-invalid': submitted && f.password.errors}\"/>\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n          </div>\n\n        </div>\n\n        <div class=\"form-group col\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n          <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n          </div>\n        </div>\n        <div class=\"form-group col\">\n          <label for=\"city\">City</label>\n          <input type=\"text\" formControlName=\"city\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" />\n          <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.city.errors.required\">City is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label for=\"branch\">Branch</label>\n          <input type=\"text\" formControlName=\"branch\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.branch.errors }\" />\n          <div *ngIf=\"submitted && f.branch.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.branch.errors.required\">Branch is required</div>\n          </div>\n        </div>\n        <div class=\"form-group col\">\n          <label for=\"profession\">Profession</label>\n          <input type=\"text\" formControlName=\"profession\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.profession.errors }\" />\n          <div *ngIf=\"submitted && f.profession.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.profession.errors.required\">Profession is required</div>\n          </div>\n        </div>\n      </div>\n        <div class=\"form-group\">\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n          </button>\n        </div>\n\n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n          Signup failed!<br />{{ errorMessage }}\n        </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TkStorageService } from '../services/tk-storage.service';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nconst TOKEN_HEADER_KEY = 'x-access-token';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private token: TkStorageService, private router: Router) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let authReq = request;\n    const token = this.token.getToken();\n\n    console.log(token)\n    if (token != null) {\n      authReq = request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n    }\n    return next.handle(authReq);\n  }\n}\nexport const authInterceptorProviders = [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }];\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\nconst AUTH_API='http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(AUTH_API+'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  signup(employee): Observable<any> {\n    return this.http.post(AUTH_API+'signup', \n      employee, httpOptions);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employee } from '../models/employee';\n\n\nconst API_URL= 'http://localhost:8080/api/hitech/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService { \n  \n  constructor(private http: HttpClient) {\n   }\n  \n   getEmployee(username): Observable<any> {\n     console.log(username);\n    return this.http.get(API_URL+'employee?username='+ encodeURIComponent( username),httpOptions);\n   }\n\n   updateEmployee(data): Observable<any> {\n     return this.http.put(API_URL+'employee', \n     JSON.parse(data), \n     httpOptions);\n   }\n   allEmployees(): Observable<any> {\n     return this.http.get(API_URL+'employees',\n     httpOptions);\n   }\n\n   delete(code): Observable<any> {\n     return this.http.post(API_URL+'disable', \n     code\n     , httpOptions);\n   }\n  \n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TkStorageService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n  public saveToken(token: string ): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n\n  }\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n  public saveUser(user): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY,  JSON.stringify(user));\n  }\n  public getUser(): any{\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}